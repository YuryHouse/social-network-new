{"version":3,"file":"static/js/239.7cd5bdf9.chunk.js","mappings":"4PACA,EAA6B,4BAA7B,EAAiE,uBCAjE,EAAuB,mB,SCgBvB,EAZa,SAACA,GACV,OACI,iBAAKC,UAAWC,EAAhB,WACI,gBAAKC,IAAI,uDAAuDC,IAAI,KAClEJ,EAAMK,SACR,4BACI,mCADJ,IACwBL,EAAMM,iBAIzC,E,oBCRKC,GAAcC,EAAAA,EAAAA,GAAiB,IAE/BC,EAAUC,EAAAA,MAAW,SAACV,GAExB,IAAIW,EAAgBX,EAAMY,MAAMC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAMT,QAASS,EAAET,QAASC,YAAaQ,EAAEC,MAA7C,IAQrC,OACI,iBAAKd,UAAWC,EAAhB,WACI,sCACA,SAACc,EAAD,CAAgBC,SARR,SAACC,GACblB,EAAMmB,QAAQD,EAAOE,YACxB,KAOO,gBAAKnB,UAAWC,EAAhB,SACKS,MAIhB,IAgBKK,GAAiBK,EAAAA,EAAAA,GAAU,CAACC,KAAM,yBAAjBD,EAdA,SAACrB,GACpB,OACI,kBAAMiB,SAAUjB,EAAMuB,aAAtB,WACI,0BACI,SAACC,EAAA,EAAD,CAAOC,UAAWC,EAAAA,GAAUC,YAAY,eAAeC,KAAK,cACrDC,SAAU,CAACC,EAAAA,EAAUvB,QAEhC,0BACI,6CAIf,IAKD,I,oBC/BA,GAJyBwB,EAAAA,EAAAA,KAPH,SAACC,GACnB,MAAO,CACHpB,MAAOoB,EAAMC,YAAYrB,MACzBQ,YAAaY,EAAMC,YAAYb,YAEtC,GAEiD,CAACD,QAAAA,EAAAA,IAA1BY,CAAqCtB,G,UCX9D,GAAgB,iBAAmB,sCAAsC,QAAU,6BAA6B,aAAe,mC,SC6C/H,EA5C+B,SAACT,GAC5B,OAAgCkC,EAAAA,EAAAA,WAAS,GAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA4BF,EAAAA,EAAAA,UAASlC,EAAMqC,QAA3C,eAAOA,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WACND,EAAUtC,EAAMqC,OACnB,GAAE,CAACrC,EAAMqC,SAcV,OACI,4BACMF,IACE,0BACI,iBACIK,cAjBK,WACrBJ,GAAY,EACf,EAce,SAEKpC,EAAMqC,QAAU,gBAI5BF,IACG,0BACI,kBACIM,WAAW,EACXC,OAvBO,WACvBN,GAAY,GACZpC,EAAM2C,aAAaN,EACtB,EAqBmBO,SAnBG,SAACC,GACpBP,EAAUO,EAAEC,cAAcC,MAC7B,EAkBmBA,MAAOV,QAM9B,ECAD,EAvCoB,SAAC,GAAqC,IAApCW,EAAmC,EAAnCA,QAASX,EAA0B,EAA1BA,OAAQM,EAAkB,EAAlBA,aACnC,OAAKK,GAKD,0BACI,iBAAK/C,UAAWC,EAAAA,iBAAhB,WACI,gBAAKD,UAAWC,EAAAA,OAAhB,UACI,gBAAKE,IAAI,GAAGD,IAAK6C,EAAQC,OAAOC,WAEpC,4BACI,0BAAK,wBAAKF,EAAQG,cAClB,SAAC,EAAD,CAAwBd,OAAQA,EAAQM,aAAcA,QAE1D,4BACI,2BACI,sCAAcK,EAAQI,WACtB,kDAA0BJ,EAAQK,eAAlC,QACA,8CAAsBL,EAAQM,iCAElC,2CACA,2BACI,qCAAaN,EAAQO,SAASC,WAC9B,iCAASR,EAAQO,SAASE,OAC1B,uCAAeT,EAAQO,SAASG,aAChC,wCAAgBV,EAAQO,SAASI,cACjC,sCAAcX,EAAQO,SAASK,YAC/B,sCAAcZ,EAAQO,SAASM,YAC/B,sCAAcb,EAAQO,SAASO,YAC/B,wCAAgBd,EAAQO,SAASQ,wBA5B1C,SAAC,IAAD,GAmCd,EC5BD,EAVgB,SAAC/D,GACb,OACI,4BACI,SAAC,EAAD,CAAagD,QAAShD,EAAMgD,QAASX,OAAQrC,EAAMqC,OAAQM,aAAc3C,EAAM2C,gBAC/E,SAAC,EAAD,MAIX,E,8BCHKqB,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAqBD,OArBCA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,oBAAAA,MACF,WACI,IAAIZ,EAASa,KAAKjE,MAAMkE,MAAMC,OAAOf,OAChCA,IACFA,EAASa,KAAKjE,MAAMoE,aAEhBH,KAAKjE,MAAMqE,QAAQC,KAAK,UAG/BL,KAAKjE,MAAMuE,eAAenB,GAE1Ba,KAAKjE,MAAMwE,UAAUpB,EAGxB,uBACD,WAEI,OACI,SAAC,GAAD,kBAAaa,KAAKjE,OAAlB,IAAyBgD,QAASiB,KAAKjE,MAAMgD,QAC7CX,OAAU4B,KAAKjE,MAAMqC,OAASM,aAAgBsB,KAAKjE,MAAM2C,eAEhE,OArBCqB,CAAyBtD,EAAAA,WAiC/B,GAAe+D,EAAAA,EAAAA,KACX1C,EAAAA,EAAAA,KATkB,SAACC,GAAD,MAAY,CAC9BgB,QAAShB,EAAMC,YAAYe,QAC3BX,OAAQL,EAAMC,YAAYI,OAC1B+B,WAAYpC,EAAM0C,KAAKtB,OACvBuB,OAAQ3C,EAAM0C,KAAKC,OAJD,GASQ,CAACJ,eAAAA,EAAAA,GAAgBC,UAAAA,EAAAA,GAAW7B,aAAAA,EAAAA,KACtDiC,EAAAA,EACAC,EAAAA,EAHJ,CAIGb,E,mJC1CCc,EAA6B,SAAC9C,GAAD,MAAY,CACzC2C,OAAQ3C,EAAM0C,KAAKC,OADU,EAIpBE,EAAmB,SAACE,GAAe,IACtCC,EADqC,0IAEvC,WACI,OAAIf,KAAKjE,MAAM2E,QAGR,SAACI,GAAD,UAAed,KAAKjE,SAFpB,SAAC,IAAD,CAAUiF,GAAI,UAGxB,KAPsC,GACXvE,EAAAA,WAUhC,OAFqCqB,EAAAA,EAAAA,IAAQ+C,EAAR/C,CAAqCiD,EAI7E,C","sources":["webpack://social-network-new/./src/Components/Profile/Myposts/MyPosts.module.css?3c92","webpack://social-network-new/./src/Components/Profile/Myposts/Post/Post.module.css?e8df","Components/Profile/Myposts/Post/Post.jsx","Components/Profile/Myposts/MyPosts.jsx","Components/Profile/Myposts/MyPostsContainer.jsx","webpack://social-network-new/./src/Components/Profile/ProfileInfo/ProfileInfo.module.css?23b5","Components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.js","hoc/withAuthRadirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__Sw+WK\",\"posts\":\"MyPosts_posts__1VSrA\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__1tvJL\"};","\r\n\r\nimport React from 'react';\r\nimport style from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (      \r\n        <div className={style.item}>\r\n            <img src=\"https://static.thenounproject.com/png/448730-200.png\" alt=\"\" />\r\n            { props.message }\r\n            <div>\r\n                <span>Like</span> { props.likesAmount }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport style from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {maxLengthCreator, required} from '../../../utils/validators/validators';\r\nimport {Textarea} from '../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n    let postsElements = props.posts.map(p => <Post message={p.message} likesAmount={p.like}/>)\r\n\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={style.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostForm onSubmit={onAddPost}/>\r\n            <div className={style.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nconst addNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} placeholder='How are you?' name='newPostText'\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostForm = reduxForm({form: 'ProfileAddNewPostForm'})(addNewPostForm);\r\n\r\n\r\nexport default MyPosts;","import MyPosts from './MyPosts';\r\nimport { addPost } from '../../../redux/profile-reducer';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addPost}) (MyPosts);\r\n\r\n\r\n\r\nexport default MyPostsContainer;","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__42ZvK\",\"content\":\"ProfileInfo_content__RRS9q\",\"profile_wrap\":\"ProfileInfo_profile_wrap__kVFGe\"};","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span\r\n                        onDoubleClick={activateEditMode}>\r\n                        {props.status || 'no status'}\r\n                    </span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input\r\n                        autoFocus={true}\r\n                        onBlur={deactivateEditMode}\r\n                        onChange={onStatusChange}\r\n                        value={status}\r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport Preloader from '../../common/preloader/preloader';\r\nimport style from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={style.descriptionBlock}>\r\n                <div className={style.avatar}>\r\n                    <img alt='' src={profile.photos.large} />\r\n                </div>\r\n                <div>\r\n                    <div><h2>{profile.fullName}</h2></div>\r\n                    <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n                </div>\r\n                <div>\r\n                    <ul>\r\n                        <li>User ID: {profile.userId}</li>\r\n                        <li>Looking for new job: {profile.lookingForAJob} </li>\r\n                        <li>Job Description: {profile.lookingForAJobDescription}</li>\r\n                    </ul>\r\n                    <h4>Contact info:</h4>\r\n                    <ul>\r\n                        <li>Github: {profile.contacts.github}</li>\r\n                        <li>VK: {profile.contacts.vk}</li>\r\n                        <li>Facebook: {profile.contacts.facebook}</li>\r\n                        <li>Instagram: {profile.contacts.instagram}</li>\r\n                        <li>Twitter: {profile.contacts.twitter}</li>\r\n                        <li>Website: {profile.contacts.website}</li>\r\n                        <li>Youtube: {profile.contacts.youtube}</li>\r\n                        <li>Main Link: {profile.contacts.mainLink}</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport MyPostsContainer from './Myposts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux'; \r\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profile-reducer';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRadirect';\r\nimport { compose } from 'redux';\r\nimport withRouter from \"react-router-dom/es/withRouter\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n           userId = this.props.authUserId;\r\n           if(!userId) {\r\n               this.props.history.push('/login');\r\n           }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        // setTimeout(() => {\r\n        this.props.getStatus(userId);\r\n        // }, 1000) \r\n        \r\n    }\r\n    render() {\r\n        \r\n        return ( \r\n            <Profile {...this.props} profile={this.props.profile} \r\n            status = {this.props.status}  updateStatus = {this.props.updateStatus} />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\n\r\nexport default compose(\r\n    connect (mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n) (ProfileContainer)","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n}); \r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) {\r\n            return <Redirect to={'/login'} />\r\n            }\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n    \r\n    return ConnectedAuthRedirectComponent;\r\n\r\n}"],"names":["props","className","style","src","alt","message","likesAmount","maxLength10","maxLengthCreator","MyPosts","React","postsElements","posts","map","p","like","AddNewPostForm","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","component","Textarea","placeholder","name","validate","required","connect","state","profilePage","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","profile","photos","large","fullName","userId","lookingForAJob","lookingForAJobDescription","contacts","github","vk","facebook","instagram","twitter","website","youtube","mainLink","ProfileContainer","this","match","params","authUserId","history","push","getUserProfile","getStatus","compose","auth","isAuth","withRouter","withAuthRedirect","mapStateToPropsForRedirect","Component","RedirectComponent","to"],"sourceRoot":""}