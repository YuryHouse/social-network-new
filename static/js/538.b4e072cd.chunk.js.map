{"version":3,"file":"static/js/538.b4e072cd.chunk.js","mappings":"kMACA,G,QAAA,CAAgB,QAAU,yBAAyB,SAAW,4B,mBCc9D,EAVmB,SAACA,GAEhB,OACI,gBAAKC,UAAWC,EAAAA,OAAe,IAAMA,EAAAA,OAArC,UACI,SAAC,KAAD,CAASC,GAAE,mBAAcH,EAAMI,IAA/B,SAAsCJ,EAAMK,QAGvD,ECHG,EAJY,SAACL,GACb,OAAO,gBAAKC,UAAWC,EAAAA,OAAhB,SAA+BF,EAAMM,SAC/C,E,uCC2BKC,GAAcC,EAAAA,EAAAA,GAAiB,IAmB/BC,GAAsBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,wBAAjBD,EAjBJ,SAACV,GACrB,OACI,kBAAMY,SAAUZ,EAAMa,aAAtB,WACI,0BACI,SAACC,EAAA,EAAD,CACAC,YAAY,qBACZC,UAAWC,EAAAA,GACXC,SAAU,CAACC,EAAAA,EAAUZ,GACrBF,KAAK,sBAET,0BACI,yCAIf,IAKD,EAhDgB,SAACL,GACb,IAAIoB,EAAQpB,EAAMqB,aAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAYpB,KAAMoB,EAAEpB,KAAiBD,GAAIqB,EAAErB,IAAZqB,EAAErB,GAArC,IACrCsB,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,SAAC,EAAD,CAAStB,QAASsB,EAAEtB,SAAcsB,EAAExB,GAAxC,IAQ3C,OACI,iBAAKH,UAAWC,EAAAA,QAAhB,WACI,gBAAKD,UAAWC,EAAAA,aAAhB,SACKoB,KAEL,gBAAKrB,UAAWC,EAAAA,SAAhB,UACI,yBAAMwB,OAEV,SAACjB,EAAD,CAAqBG,SAZT,SAACiB,GACjB7B,EAAM8B,YAAYD,EAAOE,eAC5B,MAcJ,E,UCrBD,GAAeC,E,QAAAA,KACXC,EAAAA,EAAAA,KANkB,SAACb,GAAD,MAAY,CAC9BC,aAAcD,EAAMC,aADF,GAMO,CAACS,YAAAA,EAAAA,KAC1BI,EAAAA,EAFJ,CAGGC,E,mJCVCC,EAA6B,SAAChB,GAAD,MAAY,CACzCiB,OAAQjB,EAAMkB,KAAKD,OADU,EAIpBH,EAAmB,SAACK,GAAe,IACtCC,EADqC,0IAEvC,WACI,OAAIC,KAAKzC,MAAMqC,QAGR,SAACE,GAAD,UAAeE,KAAKzC,SAFpB,SAAC,IAAD,CAAUG,GAAI,UAGxB,KAPsC,GACXuC,EAAAA,WAUhC,OAFqCT,EAAAA,EAAAA,IAAQG,EAARH,CAAqCO,EAI7E,C","sources":["webpack://social-network-new/./src/Components/Dialogs/Dialogs.module.css?db5c","Components/Dialogs/DialogItem/DialogItem.jsx","Components/Dialogs/Message/Message.jsx","Components/Dialogs/Dialogs.jsx","Components/Dialogs/DialogsContainer.jsx","hoc/withAuthRadirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__A59uO\",\"messages\":\"Dialogs_messages__ptiI0\"};","import React from 'react';\r\nimport style from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    \r\n    return (\r\n        <div className={style.dialog + ' ' + style.active}>\r\n            <NavLink to={`/dialogs/${props.id}`}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport style from './../Dialogs.module.css';\r\n\r\n\r\n\r\nconst Message = (props) => {\r\n    return <div className={style.dialog}>{props.message}</div>\r\n}\r\n\r\n    export default Message;","import React from 'react';\r\nimport style from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.messagesPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} />);\r\n\r\n\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={style.messages}>\r\n                <div>{messagesElements}</div>\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage} />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst  AddMessageForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                placeholder='Enter your message'\r\n                component={Textarea}\r\n                validate={[required, maxLength50]}\r\n                name='newMessageBody' />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'}) (AddMessageForm);\r\n\r\n\r\nexport default Dialogs;","import { connect } from 'react-redux';\r\nimport { sendMessage } from '../../redux/messages-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRadirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => ({\r\n    messagesPage: state.messagesPage,\r\n})\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {sendMessage}),\r\n    withAuthRedirect\r\n) (Dialogs)","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n}); \r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) {\r\n            return <Redirect to={'/login'} />\r\n            }\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n    \r\n    return ConnectedAuthRedirectComponent;\r\n\r\n}"],"names":["props","className","style","to","id","name","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","required","state","messagesPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","values","sendMessage","newMessageBody","compose","connect","withAuthRedirect","Dialogs","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","this","React"],"sourceRoot":""}