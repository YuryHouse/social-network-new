{"version":3,"file":"static/js/239.5cf18a11.chunk.js","mappings":"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","sources":["webpack://social-network-new/./src/Components/Profile/Myposts/MyPosts.module.css?3c92","webpack://social-network-new/./src/Components/Profile/Myposts/Post/Post.module.css?e8df","Components/Profile/Myposts/Post/Post.jsx","Components/Profile/Myposts/MyPosts.jsx","Components/Profile/Myposts/MyPostsContainer.jsx","webpack://social-network-new/./src/Components/Profile/ProfileInfo/ProfileInfo.module.css?23b5","Components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.js","hoc/withAuthRadirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__Sw+WK\",\"posts\":\"MyPosts_posts__1VSrA\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__1tvJL\"};","\r\n\r\nimport React from 'react';\r\nimport style from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (      \r\n        <div className={style.item}>\r\n            <img src=\"https://static.thenounproject.com/png/448730-200.png\" alt=\"\" />\r\n            { props.message }\r\n            <div>\r\n                <span>Like</span> { props.likesAmount }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport style from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {maxLengthCreator, required} from '../../../utils/validators/validators';\r\nimport {Textarea} from '../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n    let postsElements = props.posts.map(p => <Post message={p.message} likesAmount={p.like}/>)\r\n\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={style.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostForm onSubmit={onAddPost}/>\r\n            <div className={style.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nconst addNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} placeholder='How are you?' name='newPostText'\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostForm = reduxForm({form: 'ProfileAddNewPostForm'})(addNewPostForm);\r\n\r\n\r\nexport default MyPosts;","import MyPosts from './MyPosts';\r\nimport { addPost } from '../../../redux/profile-reducer';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addPost}) (MyPosts);\r\n\r\n\r\n\r\nexport default MyPostsContainer;","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__42ZvK\",\"content\":\"ProfileInfo_content__RRS9q\",\"profile_wrap\":\"ProfileInfo_profile_wrap__kVFGe\",\"mainPhoto\":\"ProfileInfo_mainPhoto__OPASu\",\"contact\":\"ProfileInfo_contact__n190b\"};","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span\r\n                        onDoubleClick={activateEditMode}>\r\n                        {props.status || 'no status'}\r\n                    </span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input\r\n                        autoFocus={true}\r\n                        onBlur={deactivateEditMode}\r\n                        onChange={onStatusChange}\r\n                        value={status}\r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport Preloader from '../../common/preloader/preloader';\r\nimport style from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from '../../../assets/images/userPhoto.png'\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={style.descriptionBlock}>\r\n            <div className={style.avatar}>\r\n                <img alt='' src={profile.photos.large || userPhoto} className={style.mainPhoto}/>\r\n                {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n            </div>\r\n            <div>\r\n                <b>{'Status'}</b>: <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n            {}\r\n            <ProfileData profile = {profile}/>\r\n            <div>\r\n                <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n            })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n// const ProfileDataForm = () => {\r\n//\r\n// }\r\n\r\nconst ProfileData = ({profile}) => {\r\n    return (\r\n        <>\r\n            <div>\r\n                <div><h2>{profile.fullName}</h2></div>\r\n            </div>\r\n            <div>\r\n                <div>\r\n                    <b>User ID</b>: {profile.userId}\r\n                </div>\r\n                <div>\r\n                    <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n                </div>\r\n                {profile.lookingForAJob &&\r\n                    <div>\r\n                        <b>Job description</b>: {profile.lookingForAJobDescription}\r\n                    </div>\r\n                }\r\n                <div>\r\n                    <b>About me</b>: {profile.aboutMe}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return (\r\n        <div className={style.contact}>\r\n            <b>{contactTitle}</b>: {contactValue}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport MyPostsContainer from './Myposts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo savePhoto={props.savePhoto}\r\n                         isOwner={props.isOwner}\r\n                         profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}\r\n            />\r\n            <MyPostsContainer/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {getUserProfile, getStatus, updateStatus, savePhoto} from '../../redux/profile-reducer';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRadirect';\r\nimport {compose} from 'redux';\r\nimport withRouter from \"react-router-dom/es/withRouter\";\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto}/>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n}); \r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) {\r\n            return <Redirect to={'/login'} />\r\n            }\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n    \r\n    return ConnectedAuthRedirectComponent;\r\n\r\n}"],"names":["props","className","style","src","alt","message","likesAmount","maxLength10","maxLengthCreator","MyPosts","React","postsElements","posts","map","p","like","AddNewPostForm","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","component","Textarea","placeholder","name","validate","required","connect","state","profilePage","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileData","profile","fullName","userId","lookingForAJob","lookingForAJobDescription","aboutMe","Contact","contactTitle","contactValue","isOwner","savePhoto","photos","large","userPhoto","type","target","files","length","Object","keys","contacts","key","ProfileContainer","this","match","params","authUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","auth","isAuth","withRouter","withAuthRedirect","mapStateToPropsForRedirect","Component","RedirectComponent","to"],"sourceRoot":""}